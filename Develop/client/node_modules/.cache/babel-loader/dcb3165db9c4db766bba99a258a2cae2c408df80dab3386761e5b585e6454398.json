{"ast":null,"code":"var _jsxFileName = \"/Users/jared_green97/bootcamp/Challenges/21-BookwormSE/Develop/client/src/pages/SearchBooks.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Col, Form, Button, Card, Row } from 'react-bootstrap';\nimport { useMutation } from \"@apollo/client\";\nimport Auth from '../utils/auth';\nimport { searchGoogleBooks } from '../utils/API';\nimport { saveBookIds, getSavedBookIds } from '../utils/localStorage';\nimport { SAVE_BOOK } from '../utils/mutations';\nimport context from 'react-bootstrap/esm/AccordionContext';\nimport { useApolloClient } from \"@apollo/client\";\n\n// ...\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst handleSaveBook = async bookId => {\n  _s();\n  console.log(\"trying to save book\");\n  // find the book in `searchedBooks` state by the matching id\n  const bookToSave = searchedBooks.find(book => book.bookId === bookId);\n  console.log(`bookToSave:`, bookToSave);\n\n  // Destructure the properties of bookToSave\n  const {\n    authors,\n    title,\n    description,\n    image\n  } = bookToSave;\n\n  // get token\n  const token = Auth.loggedIn() ? Auth.getToken() : null;\n  console.log(`token:`, token);\n  if (!token) {\n    return false;\n  }\n\n  // Access Apollo Client context\n  const client = useApolloClient();\n  try {\n    console.log(`book to save here:`, authors);\n    console.log(`book to save here:`, title);\n    console.log(`book to save here:`, description);\n    console.log(`book to save here:`, image);\n    const {\n      data\n    } = await saveBook({\n      variables: {\n        input: bookToSave\n      },\n      context: {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }\n    });\n    console.log(data.Body);\n    // if book successfully saves to user's account, save book id to state\n    setSavedBookIds([...savedBookIds, bookToSave.bookId]);\n\n    // Refetch the me query to update the user data\n    await client.query({\n      query: ME_QUERY\n    });\n  } catch (err) {\n    console.error(err);\n    throw new Error(\"Unable to save new title to your saved books list!\");\n  }\n};\n_s(handleSaveBook, \"bRce2qNAOkF4RDs+MXWx0he9v30=\", false, function () {\n  return [useApolloClient];\n});\nconst SearchBooks = () => {\n  _s2();\n  // create state for holding returned google api data\n  const [searchedBooks, setSearchedBooks] = useState([]);\n  // create state for holding our search field data\n  const [searchInput, setSearchInput] = useState('');\n\n  // create state to hold saved bookId values\n  const [savedBookIds, setSavedBookIds] = useState(getSavedBookIds());\n\n  // set up useEffect hook to save `savedBookIds` list to localStorage on component unmount\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\n  useEffect(() => {\n    return () => saveBookIds(savedBookIds);\n  });\n  const [saveBook, {\n    error\n  }] = useMutation(SAVE_BOOK);\n\n  // create method to search for books and set state on form submit\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    if (!searchInput) {\n      return false;\n    }\n    try {\n      const response = await searchGoogleBooks(searchInput);\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n      const {\n        items\n      } = await response.json();\n      const bookData = items.map(book => {\n        var _book$volumeInfo$imag;\n        return {\n          bookId: book.id,\n          authors: book.volumeInfo.authors || ['No author to display'],\n          title: book.volumeInfo.title,\n          description: book.volumeInfo.description,\n          image: ((_book$volumeInfo$imag = book.volumeInfo.imageLinks) === null || _book$volumeInfo$imag === void 0 ? void 0 : _book$volumeInfo$imag.thumbnail) || ''\n        };\n      });\n      setSearchedBooks(bookData);\n      setSearchInput('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // create function to handle saving a book to our database\n  const handleSaveBook = async bookId => {\n    console.log(\"trying to save book\");\n    // find the book in `searchedBooks` state by the matching id\n    const bookToSave = searchedBooks.find(book => book.bookId === bookId);\n    console.log(`bookToSave: ${bookToSave}`);\n\n    // Destructure the properties of bookToSave\n    const {\n      authors,\n      title,\n      description,\n      image\n    } = bookToSave;\n\n    // get token\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n    console.log(`token: ${token}`);\n    console.log(`context: ${context}`);\n    console.log(context.user);\n    if (!token) {\n      return false;\n    }\n    console.log(`context2: ${context}`);\n    try {\n      console.log(`book to save here: ${authors}`);\n      console.log(`book to save here: ${title}`);\n      console.log(`book to save here: ${description}`);\n      console.log(`book to save here: ${image}`);\n      const {\n        data\n      } = await saveBook({\n        variables: {\n          input: bookToSave\n        },\n        context: {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }\n      });\n      console.log(data.Body);\n      // if book successfully saves to user's account, save book id to state\n      setSavedBookIds([...savedBookIds, bookToSave.bookId]);\n    } catch (err) {\n      console.error(err);\n      throw new Error(\"Unable to save new title to your saved books list!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-light bg-dark pt-5\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Search for Books!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleFormSubmit,\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              xs: 12,\n              md: 8,\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                name: \"searchInput\",\n                value: searchInput,\n                onChange: e => setSearchInput(e.target.value),\n                type: \"text\",\n                size: \"lg\",\n                placeholder: \"Search for a book\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: 12,\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"success\",\n                size: \"lg\",\n                children: \"Submit Search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"pt-5\",\n        children: searchedBooks.length ? `Viewing ${searchedBooks.length} results:` : 'Search for a book to begin'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: searchedBooks.map(book => {\n          return /*#__PURE__*/_jsxDEV(Col, {\n            md: \"4\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              border: \"dark\",\n              children: [book.image ? /*#__PURE__*/_jsxDEV(Card.Img, {\n                src: book.image,\n                alt: `The cover for ${book.title}`,\n                variant: \"top\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 21\n              }, this) : null, /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: book.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"small\",\n                  children: [\"Authors: \", book.authors]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: book.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 21\n                }, this), Auth.loggedIn() && /*#__PURE__*/_jsxDEV(Button, {\n                  disabled: savedBookIds === null || savedBookIds === void 0 ? void 0 : savedBookIds.some(savedBookId => savedBookId === book.bookId),\n                  className: \"btn-block btn-info\",\n                  onClick: () => handleSaveBook(book.bookId),\n                  children: savedBookIds !== null && savedBookIds !== void 0 && savedBookIds.some(savedBookId => savedBookId === book.bookId) ? 'This book has already been saved!' : 'Save this Book!'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 19\n              }, this)]\n            }, book.bookId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s2(SearchBooks, \"oCRUBLq/8B78CiDGMZVEFCrkrEc=\", false, function () {\n  return [useMutation];\n});\n_c = SearchBooks;\nexport default SearchBooks;\nvar _c;\n$RefreshReg$(_c, \"SearchBooks\");","map":{"version":3,"names":["React","useState","useEffect","Container","Col","Form","Button","Card","Row","useMutation","Auth","searchGoogleBooks","saveBookIds","getSavedBookIds","SAVE_BOOK","context","useApolloClient","jsxDEV","_jsxDEV","Fragment","_Fragment","handleSaveBook","bookId","_s","console","log","bookToSave","searchedBooks","find","book","authors","title","description","image","token","loggedIn","getToken","client","data","saveBook","variables","input","headers","Authorization","Body","setSavedBookIds","savedBookIds","query","ME_QUERY","err","error","Error","SearchBooks","_s2","setSearchedBooks","searchInput","setSearchInput","handleFormSubmit","event","preventDefault","response","ok","items","json","bookData","map","_book$volumeInfo$imag","id","volumeInfo","imageLinks","thumbnail","user","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","xs","md","Control","name","value","onChange","e","target","type","size","placeholder","variant","length","border","Img","src","alt","Title","Text","disabled","some","savedBookId","onClick","_c","$RefreshReg$"],"sources":["/Users/jared_green97/bootcamp/Challenges/21-BookwormSE/Develop/client/src/pages/SearchBooks.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Container,\n  Col,\n  Form,\n  Button,\n  Card,\n  Row\n} from 'react-bootstrap';\nimport { useMutation } from \"@apollo/client\";\nimport Auth from '../utils/auth';\nimport { searchGoogleBooks } from '../utils/API';\nimport { saveBookIds, getSavedBookIds } from '../utils/localStorage';\nimport { SAVE_BOOK } from '../utils/mutations';\nimport context from 'react-bootstrap/esm/AccordionContext';\nimport { useApolloClient } from \"@apollo/client\";\n\n// ...\n\nconst handleSaveBook = async (bookId) => {\n  console.log(\"trying to save book\");\n  // find the book in `searchedBooks` state by the matching id\n  const bookToSave = searchedBooks.find((book) => book.bookId === bookId);\n  console.log(`bookToSave:`, bookToSave);\n\n  // Destructure the properties of bookToSave\n  const { authors, title, description, image } = bookToSave;\n\n  // get token\n  const token = Auth.loggedIn() ? Auth.getToken() : null;\n  console.log(`token:`, token);\n\n  if (!token) {\n    return false;\n  }\n\n  // Access Apollo Client context\n  const client = useApolloClient();\n\n  try {\n    console.log(`book to save here:`, authors);\n    console.log(`book to save here:`, title);\n    console.log(`book to save here:`, description);\n    console.log(`book to save here:`, image);\n\n    const { data } = await saveBook({\n      variables: { input: bookToSave },\n      context: {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      },\n    });\n\n    console.log(data.Body);\n    // if book successfully saves to user's account, save book id to state\n    setSavedBookIds([...savedBookIds, bookToSave.bookId]);\n\n    // Refetch the me query to update the user data\n    await client.query({ query: ME_QUERY });\n  } catch (err) {\n    console.error(err);\n    throw new Error(\"Unable to save new title to your saved books list!\");\n  }\n};\n\n\nconst SearchBooks = () => {\n  // create state for holding returned google api data\n  const [searchedBooks, setSearchedBooks] = useState([]);\n  // create state for holding our search field data\n  const [searchInput, setSearchInput] = useState('');\n\n  // create state to hold saved bookId values\n  const [savedBookIds, setSavedBookIds] = useState(getSavedBookIds());\n\n  // set up useEffect hook to save `savedBookIds` list to localStorage on component unmount\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\n  useEffect(() => {\n    return () => saveBookIds(savedBookIds);\n  });\n\n  const [saveBook, { error }] = useMutation(SAVE_BOOK); \n\n  // create method to search for books and set state on form submit\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!searchInput) {\n      return false;\n    }\n\n    try {\n      const response = await searchGoogleBooks(searchInput);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const { items } = await response.json();\n\n      const bookData = items.map((book) => ({\n        bookId: book.id,\n        authors: book.volumeInfo.authors || ['No author to display'],\n        title: book.volumeInfo.title,\n        description: book.volumeInfo.description,\n        image: book.volumeInfo.imageLinks?.thumbnail || '',\n      }));\n\n      setSearchedBooks(bookData);\n      setSearchInput('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // create function to handle saving a book to our database\n  const handleSaveBook = async (bookId) => {\n    console.log(\"trying to save book\");\n    // find the book in `searchedBooks` state by the matching id\n    const bookToSave = searchedBooks.find((book) => book.bookId === bookId);\n    console.log(`bookToSave: ${bookToSave}`);\n\n    // Destructure the properties of bookToSave\n    const { authors, title, description, image } = bookToSave;\n\n    // get token\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n    console.log(`token: ${token}`);\n\n    console.log(`context: ${context}`);\n    console.log(context.user);\n\n    if (!token) {\n      return false;\n    }\n\n    console.log(`context2: ${context}`);\n\n    try {\n      console.log(`book to save here: ${authors}`);\n      console.log(`book to save here: ${title}`);\n      console.log(`book to save here: ${description}`);\n      console.log(`book to save here: ${image}`);\n      const { data } = await saveBook({\n        variables: { input: bookToSave },\n        context: {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        },\n      });\n\n      console.log(data.Body);\n      // if book successfully saves to user's account, save book id to state\n      setSavedBookIds([...savedBookIds, bookToSave.bookId]);\n    } catch (err) {\n      console.error(err);\n      throw new Error(\"Unable to save new title to your saved books list!\");\n    }\n  };\n\n  return (\n    <>\n      <div className='text-light bg-dark pt-5'>\n        <Container>\n          <h1>Search for Books!</h1>\n          <Form onSubmit={handleFormSubmit}>\n            <Row>\n              <Col xs={12} md={8}>\n                <Form.Control\n                  name='searchInput'\n                  value={searchInput}\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  type='text'\n                  size='lg'\n                  placeholder='Search for a book'\n                />\n              </Col>\n              <Col xs={12} md={4}>\n                <Button type='submit' variant='success' size='lg'>\n                  Submit Search\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        </Container>\n      </div>\n\n      <Container>\n        <h2 className='pt-5'>\n          {searchedBooks.length\n            ? `Viewing ${searchedBooks.length} results:`\n            : 'Search for a book to begin'}\n        </h2>\n        <Row>\n          {searchedBooks.map((book) => {\n            return (\n              <Col md=\"4\">\n                <Card key={book.bookId} border='dark'>\n                  {book.image ? (\n                    <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' />\n                  ) : null}\n                  <Card.Body>\n                    <Card.Title>{book.title}</Card.Title>\n                    <p className='small'>Authors: {book.authors}</p>\n                    <Card.Text>{book.description}</Card.Text>\n                    {Auth.loggedIn() && (\n                      <Button\n                        disabled={savedBookIds?.some((savedBookId) => savedBookId === book.bookId)}\n                        className='btn-block btn-info'\n                        onClick={() => handleSaveBook(book.bookId)}>\n                        {savedBookIds?.some((savedBookId) => savedBookId === book.bookId)\n                          ? 'This book has already been saved!'\n                          : 'Save this Book!'}\n                      </Button>\n                    )}\n                  </Card.Body>\n                </Card>\n              </Col>\n            );\n          })}\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default SearchBooks;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}